name: Systems Build

on:
  workflow_run:
    workflows: [Systems Test]
    types:
      - completed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build_batch_1:
    name: Build Batch 1
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_1.sh
          ./scripts/build_batch_1.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_2:
    name: Build Batch 2
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_2.sh
          ./scripts/build_batch_2.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_3:
    name: Build Batch 3
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_3.sh
          ./scripts/build_batch_3.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_4:
    name: Build Batch 4
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_4.sh
          ./scripts/build_batch_4.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_5:
    name: Build Batch 5
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_5.sh
          ./scripts/build_batch_5.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_6:
    name: Build Batch 6
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_6.sh
          ./scripts/build_batch_6.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_7:
    name: Build Batch 7
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_7.sh
          ./scripts/build_batch_7.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_8:
    name: Build Batch 8
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_8.sh
          ./scripts/build_batch_8.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_9:
    name: Build Batch 9
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_9.sh
          ./scripts/build_batch_9.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done

  build_batch_10:
    name: Build Batch 10
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          github_access_token: ${{ secrets.GH_TOKEN }}

      - name: Nix build
        run: |
          chmod +x ./scripts/build_batch_10.sh
          ./scripts/build_batch_10.sh

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Load images
        run: |
          chmod +x ./load_all.sh
          ./load_all.sh

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Push images
        run: |
          set -e

          for image in result/*; do
            name="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$(basename "${image}")"

            echo "Pushing ${name}..."
            docker tag "${image}" "${name}"
            docker push "${name}"
          done
